Chapter IV
  Carros
        - 
        - 
    12
    13
    14
    15
      Criar especificação para cada carro, não adicionar especificação repetida para o mesmo carro
      receber array de id de especificações, e um id de carro

      Criar CarImages repository, use case e teste
        salvar imagens para carros em um pasta com multer
        salvar id de cada imagem para um id do carro em uma tabela

      Teve mudanças em DTO de especificação e de carro eu acho adicionando propriedade id como opcional.



  Aluguel
    01
      Criar migration da tabela de aluguel (Rental) com chaves estrangeiras para tabelas de (user, car, etc)
    02 - 03
      IRentalsRepository
      ICreateRentalDTO (user_id, car_id, expected_return_date)
      Criar CreateRentalUseCase com (user_id, car_id, expected_return_date)
        findOpenRentalByCard(car_id) para trazer availableCar, caso unavailable gerar exceção no use case
          this.rentals.find rentar.car_id === car_id && !rental.end_date // não foi devolvido
        findOpenRentalByUser(user_id) gerar exceção caso um usuário tenha um carro alugado
          this.rentals.find rental.user_id === user_id !rental.end_date // não foi devolvido
        create({car_id, user_id, expected_return_date} : ICreateRentalDTO) : Rental
        

      
      Rental Entity
      RentalRepositoryInMemory
      CreateRentalUseCase.spec
        Create Rental
          should be able to create a new rental
            expect id, start_date
          should not be able to create a new rental if there is another open to the same user
            expect rejects toBeInstanceOf AppError
          should not be able to create a new rentar if there is another open to the same car
            expect rejects tobeInstanceOf AppError